{"ast":null,"code":"var _jsxFileName = \"/Users/rleo/Documents/my-pixabay-app/src/locations/Dialog.jsx\",\n  _s = $RefreshSig$();\n/** @jsxImportSource @emotion/react */\nimport React, { useState } from 'react';\nimport { useSDK } from '@contentful/react-apps-toolkit';\nimport { Button, TextInput } from '@contentful/f36-components';\nimport styled from '@emotion/styled';\n\n// Constants\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"@emotion/react/jsx-dev-runtime\";\nconst PIXABAY_API_KEY = '45979271-945d910b95e96769c55111ae5';\n\n// Styled Components using Emotion\nconst Container = styled.div`\n  padding: 20px;\n  overflow-y: auto;\n`;\n_c = Container;\nconst ImageGrid = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  margin-top: 20px;\n`;\n_c2 = ImageGrid;\nconst SelectedImagesGrid = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 20px;\n`;\n_c3 = SelectedImagesGrid;\nconst Image = styled.img`\n  cursor: pointer;\n  width: 150px;\n  height: 150px;\n  object-fit: cover;\n  border: ${props => props.isSelected ? '3px solid blue' : 'none'};\n  opacity: ${props => props.isDisabled ? 0.5 : 1};\n  pointer-events: ${props => props.isDisabled ? 'none' : 'auto'};\n`;\n_c4 = Image;\nconst Thumbnail = styled.img`\n  width: 75px;\n  height: 75px;\n  object-fit: cover;\n  border-radius: 5px;\n  border: 2px solid #ddd;\n  cursor: pointer;\n`;\n_c5 = Thumbnail;\nconst Message = styled.p`\n  margin-top: 20px;\n  color: #666;\n`;\n_c6 = Message;\nconst ErrorMessage = styled.p`\n  margin-top: 20px;\n  color: red;\n  font-weight: bold;\n`;\n_c7 = ErrorMessage;\nconst PaginationControls = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 20px;\n  margin-bottom: 10px;\n`;\n\n// Component\n_c8 = PaginationControls;\nconst Dialog = () => {\n  _s();\n  const sdk = useSDK();\n  const [query, setQuery] = useState('');\n  const [images, setImages] = useState([]);\n  const [selectedImages, setSelectedImages] = useState([]);\n  const [page, setPage] = useState(1); // Track current page\n  const [totalHits, setTotalHits] = useState(0); // Total number of images for the query\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasSearched, setHasSearched] = useState(false); // Track if the user has searched\n  const [error, setError] = useState(null); // Error state\n  const {\n    currentImages,\n    maxImages\n  } = sdk.parameters.invocation;\n  const imagesPerPage = 20; // Number of images to fetch per page\n\n  // Search for images from Pixabay\n  const searchImages = async (newPage = 1) => {\n    setIsLoading(true);\n    setError(null); // Reset error state before making a new request\n    setHasSearched(true); // Track that the user has performed a search\n\n    try {\n      const response = await fetch(`https://pixabay.com/api/?key=${PIXABAY_API_KEY}&q=${encodeURIComponent(query)}&page=${newPage}&per_page=${imagesPerPage}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch images');\n      }\n      const data = await response.json();\n      if (data.hits.length === 0) {\n        setImages([]); // No images found for the query\n      } else {\n        setImages(data.hits); // Set images for the current page\n        setTotalHits(data.totalHits); // Update total hits for the query\n        setPage(newPage); // Update the current page number\n      }\n    } catch (error) {\n      setError('Something went wrong. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handle image selection and deselection\n  const handleImageClick = imageUrl => {\n    const isSelected = selectedImages.includes(imageUrl);\n    if (isSelected) {\n      setSelectedImages(selectedImages.filter(img => img !== imageUrl));\n    } else if (selectedImages.length < maxImages) {\n      setSelectedImages([...selectedImages, imageUrl]);\n    }\n  };\n\n  // Remove image from the selected images preview\n  const removeSelectedImage = imageUrl => {\n    setSelectedImages(selectedImages.filter(img => img !== imageUrl));\n  };\n  const handleSubmit = () => {\n    sdk.close(selectedImages); // Return the selected images\n  };\n  const nextPage = () => {\n    if (page * imagesPerPage < totalHits) {\n      searchImages(page + 1); // Fetch the next page of images\n    }\n  };\n  const prevPage = () => {\n    if (page > 1) {\n      searchImages(page - 1); // Fetch the previous page of images\n    }\n  };\n  return _jsxDEV(Container, {\n    children: [_jsxDEV(TextInput, {\n      value: query,\n      onChange: e => setQuery(e.target.value),\n      placeholder: \"Search for images\",\n      css: {\n        marginBottom: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), _jsxDEV(Button, {\n      onClick: () => searchImages(1),\n      isDisabled: isLoading,\n      children: isLoading ? 'Searching...' : 'Search Images'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), error && _jsxDEV(ErrorMessage, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }, this), \"  \", !error && images.length === 0 && hasSearched && !isLoading && _jsxDEV(Message, {\n      children: \"No images found for this query. Try a different search term.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this), selectedImages.length > 0 && _jsxDEV(_Fragment, {\n      children: [_jsxDEV(\"h4\", {\n        children: \"Selected Images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), _jsxDEV(SelectedImagesGrid, {\n        children: selectedImages.map(imageUrl => _jsxDEV(\"div\", {\n          children: _jsxDEV(Thumbnail, {\n            src: imageUrl,\n            alt: \"Selected Image\",\n            onClick: () => removeSelectedImage(imageUrl) // Allow removal of selected images\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }, this)\n        }, imageUrl, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), _jsxDEV(ImageGrid, {\n      children: images.map(image => {\n        const isAlreadySelected = currentImages.includes(image.largeImageURL); // Check if image is already selected\n        const isSelected = selectedImages.includes(image.largeImageURL);\n        return _jsxDEV(Image, {\n          src: image.previewURL,\n          alt: image.tags,\n          isSelected: isSelected,\n          isDisabled: isAlreadySelected // Disable re-selection if image is already selected\n          ,\n          onClick: () => handleImageClick(image.largeImageURL)\n        }, image.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), images.length > 0 && _jsxDEV(PaginationControls, {\n      children: [_jsxDEV(Button, {\n        onClick: prevPage,\n        isDisabled: page === 1 || isLoading,\n        children: \"Previous Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this), _jsxDEV(Button, {\n        onClick: nextPage,\n        isDisabled: page * imagesPerPage >= totalHits || isLoading,\n        children: \"Next Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }, this), _jsxDEV(Button, {\n      onClick: handleSubmit,\n      isDisabled: selectedImages.length === 0,\n      children: [\"Submit \", selectedImages.length, \" Image\", selectedImages.length !== 1 && 's']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), selectedImages.length >= maxImages && _jsxDEV(Message, {\n      children: [\"You can only select up to \", maxImages, \" images.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s(Dialog, \"efFHT259C/HCjp8pbWcQ/4OWFms=\", false, function () {\n  return [useSDK];\n});\n_c9 = Dialog;\nexport default Dialog;\n\n// const PIXABAY_API_KEY = '45979271-945d910b95e96769c55111ae5';\n// const response = await fetch(`https://pixabay.com/api/?key=${PIXABAY_API_KEY}&q=${encodeURIComponent(query)}`);\n// const response = await fetch(`https://pixabay.com/api/?key=45979271-945d910b95e96769c55111ae5&q=falskdjasd`);\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"ImageGrid\");\n$RefreshReg$(_c3, \"SelectedImagesGrid\");\n$RefreshReg$(_c4, \"Image\");\n$RefreshReg$(_c5, \"Thumbnail\");\n$RefreshReg$(_c6, \"Message\");\n$RefreshReg$(_c7, \"ErrorMessage\");\n$RefreshReg$(_c8, \"PaginationControls\");\n$RefreshReg$(_c9, \"Dialog\");","map":{"version":3,"names":["React","useState","useSDK","Button","TextInput","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","PIXABAY_API_KEY","Container","div","_c","ImageGrid","_c2","SelectedImagesGrid","_c3","Image","img","props","isSelected","isDisabled","_c4","Thumbnail","_c5","Message","p","_c6","ErrorMessage","_c7","PaginationControls","_c8","Dialog","_s","sdk","query","setQuery","images","setImages","selectedImages","setSelectedImages","page","setPage","totalHits","setTotalHits","isLoading","setIsLoading","hasSearched","setHasSearched","error","setError","currentImages","maxImages","parameters","invocation","imagesPerPage","searchImages","newPage","response","fetch","encodeURIComponent","ok","Error","data","json","hits","length","handleImageClick","imageUrl","includes","filter","removeSelectedImage","handleSubmit","close","nextPage","prevPage","children","value","onChange","e","target","placeholder","css","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","src","alt","image","isAlreadySelected","largeImageURL","previewURL","tags","id","_c9","$RefreshReg$"],"sources":["/Users/rleo/Documents/my-pixabay-app/src/locations/Dialog.jsx"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport React, { useState } from 'react';\nimport { useSDK } from '@contentful/react-apps-toolkit';\nimport { Button, TextInput } from '@contentful/f36-components';\nimport styled from '@emotion/styled';\n\n// Constants\nconst PIXABAY_API_KEY = '45979271-945d910b95e96769c55111ae5';\n\n// Styled Components using Emotion\nconst Container = styled.div`\n  padding: 20px;\n  overflow-y: auto;\n`;\n\nconst ImageGrid = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  margin-top: 20px;\n`;\n\nconst SelectedImagesGrid = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 20px;\n`;\n\nconst Image = styled.img`\n  cursor: pointer;\n  width: 150px;\n  height: 150px;\n  object-fit: cover;\n  border: ${(props) => (props.isSelected ? '3px solid blue' : 'none')};\n  opacity: ${(props) => (props.isDisabled ? 0.5 : 1)};\n  pointer-events: ${(props) => (props.isDisabled ? 'none' : 'auto')};\n`;\n\nconst Thumbnail = styled.img`\n  width: 75px;\n  height: 75px;\n  object-fit: cover;\n  border-radius: 5px;\n  border: 2px solid #ddd;\n  cursor: pointer;\n`;\n\nconst Message = styled.p`\n  margin-top: 20px;\n  color: #666;\n`;\n\nconst ErrorMessage = styled.p`\n  margin-top: 20px;\n  color: red;\n  font-weight: bold;\n`;\n\nconst PaginationControls = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 20px;\n  margin-bottom: 10px;\n`;\n\n// Component\nconst Dialog = () => {\n  const sdk = useSDK();\n  const [query, setQuery] = useState('');\n  const [images, setImages] = useState([]);\n  const [selectedImages, setSelectedImages] = useState([]);\n  const [page, setPage] = useState(1);  // Track current page\n  const [totalHits, setTotalHits] = useState(0);  // Total number of images for the query\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasSearched, setHasSearched] = useState(false);  // Track if the user has searched\n  const [error, setError] = useState(null);  // Error state\n  const { currentImages, maxImages } = sdk.parameters.invocation;\n  const imagesPerPage = 20;  // Number of images to fetch per page\n\n  // Search for images from Pixabay\n  const searchImages = async (newPage = 1) => {\n    setIsLoading(true);\n    setError(null);  // Reset error state before making a new request\n    setHasSearched(true);  // Track that the user has performed a search\n\n    try {\n      const response = await fetch(\n        `https://pixabay.com/api/?key=${PIXABAY_API_KEY}&q=${encodeURIComponent(query)}&page=${newPage}&per_page=${imagesPerPage}`\n      );\n      if (!response.ok) {\n        throw new Error('Failed to fetch images');\n      }\n      const data = await response.json();\n      if (data.hits.length === 0) {\n        setImages([]);  // No images found for the query\n      } else {\n        setImages(data.hits);  // Set images for the current page\n        setTotalHits(data.totalHits);  // Update total hits for the query\n        setPage(newPage);  // Update the current page number\n      }\n    } catch (error) {\n      setError('Something went wrong. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handle image selection and deselection\n  const handleImageClick = (imageUrl) => {\n    const isSelected = selectedImages.includes(imageUrl);\n\n    if (isSelected) {\n      setSelectedImages(selectedImages.filter((img) => img !== imageUrl));\n    } else if (selectedImages.length < maxImages) {\n      setSelectedImages([...selectedImages, imageUrl]);\n    }\n  };\n\n  // Remove image from the selected images preview\n  const removeSelectedImage = (imageUrl) => {\n    setSelectedImages(selectedImages.filter((img) => img !== imageUrl));\n  };\n\n  const handleSubmit = () => {\n    sdk.close(selectedImages);  // Return the selected images\n  };\n\n  const nextPage = () => {\n    if (page * imagesPerPage < totalHits) {\n      searchImages(page + 1);  // Fetch the next page of images\n    }\n  };\n\n  const prevPage = () => {\n    if (page > 1) {\n      searchImages(page - 1);  // Fetch the previous page of images\n    }\n  };\n\n  return (\n    <Container>\n      <TextInput\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n        placeholder=\"Search for images\"\n        css={{ marginBottom: '10px' }}\n      />\n      <Button onClick={() => searchImages(1)} isDisabled={isLoading}>\n        {isLoading ? 'Searching...' : 'Search Images'}\n      </Button>\n\n      {error && <ErrorMessage>{error}</ErrorMessage>}  {/* Display error message if any */}\n\n      {!error && images.length === 0 && hasSearched && !isLoading && (\n        <Message>No images found for this query. Try a different search term.</Message>\n      )}\n\n      {/* Display the selected images preview */}\n      {selectedImages.length > 0 && (\n        <>\n          <h4>Selected Images</h4>\n          <SelectedImagesGrid>\n            {selectedImages.map((imageUrl) => (\n              <div key={imageUrl}>\n                <Thumbnail\n                  src={imageUrl}\n                  alt=\"Selected Image\"\n                  onClick={() => removeSelectedImage(imageUrl)}  // Allow removal of selected images\n                />\n              </div>\n            ))}\n          </SelectedImagesGrid>\n        </>\n      )}\n\n      <ImageGrid>\n        {images.map((image) => {\n          const isAlreadySelected = currentImages.includes(image.largeImageURL);  // Check if image is already selected\n          const isSelected = selectedImages.includes(image.largeImageURL);\n\n          return (\n            <Image\n              key={image.id}\n              src={image.previewURL}\n              alt={image.tags}\n              isSelected={isSelected}\n              isDisabled={isAlreadySelected}  // Disable re-selection if image is already selected\n              onClick={() => handleImageClick(image.largeImageURL)}\n            />\n          );\n        })}\n      </ImageGrid>\n\n      {images.length > 0 && (\n        <PaginationControls>\n          <Button onClick={prevPage} isDisabled={page === 1 || isLoading}>\n            Previous Page\n          </Button>\n          <Button\n            onClick={nextPage}\n            isDisabled={page * imagesPerPage >= totalHits || isLoading}\n          >\n            Next Page\n          </Button>\n        </PaginationControls>\n      )}\n\n      <Button onClick={handleSubmit} isDisabled={selectedImages.length === 0}>\n        Submit {selectedImages.length} Image{selectedImages.length !== 1 && 's'}\n      </Button>\n\n      {selectedImages.length >= maxImages && (\n        <Message>You can only select up to {maxImages} images.</Message>\n      )}\n    </Container>\n  );\n};\n\nexport default Dialog;\n\n\n\n// const PIXABAY_API_KEY = '45979271-945d910b95e96769c55111ae5';\n// const response = await fetch(`https://pixabay.com/api/?key=${PIXABAY_API_KEY}&q=${encodeURIComponent(query)}`);\n// const response = await fetch(`https://pixabay.com/api/?key=45979271-945d910b95e96769c55111ae5&q=falskdjasd`);\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}