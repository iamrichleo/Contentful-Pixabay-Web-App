{"ast":null,"code":"var _jsxFileName = \"/Users/rleo/Documents/my-pixabay-app/src/locations/Dialog.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSDK } from '@contentful/react-apps-toolkit';\nimport { Button, TextInput } from '@contentful/forma-36-react-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dialog = () => {\n  _s();\n  const sdk = useSDK(); // Access the SDK inside the dialog\n  const [query, setQuery] = useState('');\n  const [images, setImages] = useState([]);\n\n  // Fetch images from Pixabay API\n  const searchImages = async () => {\n    const response = await fetch(`https://pixabay.com/api/?key=YOUR_PIXABAY_API_KEY&q=${encodeURIComponent(query)}`);\n    const data = await response.json();\n    setImages(data.hits);\n  };\n\n  // Handle image selection and close the dialog with the selected image URL\n  const handleImageClick = imageUrl => {\n    sdk.close(imageUrl); // Pass the selected image URL back to the Field component\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TextInput, {\n      value: query,\n      onChange: e => setQuery(e.target.value),\n      placeholder: \"Search for images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: searchImages,\n      children: \"Search Images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: images.map(image => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image.previewURL,\n        alt: image.tags,\n        style: {\n          margin: '10px',\n          cursor: 'pointer'\n        },\n        onClick: () => handleImageClick(image.largeImageURL) // Pass the selected image URL\n      }, image.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Dialog, \"/h8xAGTAz1h2f7ctk4biQIuE/bQ=\", false, function () {\n  return [useSDK];\n});\n_c = Dialog;\nexport default Dialog;\nvar _c;\n$RefreshReg$(_c, \"Dialog\");","map":{"version":3,"names":["React","useState","useSDK","Button","TextInput","jsxDEV","_jsxDEV","Dialog","_s","sdk","query","setQuery","images","setImages","searchImages","response","fetch","encodeURIComponent","data","json","hits","handleImageClick","imageUrl","close","children","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","image","src","previewURL","alt","tags","style","margin","cursor","largeImageURL","id","_c","$RefreshReg$"],"sources":["/Users/rleo/Documents/my-pixabay-app/src/locations/Dialog.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useSDK } from '@contentful/react-apps-toolkit';\nimport { Button, TextInput } from '@contentful/forma-36-react-components';\n\nconst Dialog = () => {\n  const sdk = useSDK();  // Access the SDK inside the dialog\n  const [query, setQuery] = useState('');\n  const [images, setImages] = useState([]);\n\n  // Fetch images from Pixabay API\n  const searchImages = async () => {\n    const response = await fetch(`https://pixabay.com/api/?key=YOUR_PIXABAY_API_KEY&q=${encodeURIComponent(query)}`);\n    const data = await response.json();\n    setImages(data.hits);\n  };\n\n  // Handle image selection and close the dialog with the selected image URL\n  const handleImageClick = (imageUrl) => {\n    sdk.close(imageUrl);  // Pass the selected image URL back to the Field component\n  };\n\n  return (\n    <div>\n      <TextInput\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n        placeholder=\"Search for images\"\n      />\n      <Button onClick={searchImages}>Search Images</Button>\n\n      <div>\n        {images.map((image) => (\n          <img\n            key={image.id}\n            src={image.previewURL}\n            alt={image.tags}\n            style={{ margin: '10px', cursor: 'pointer' }}\n            onClick={() => handleImageClick(image.largeImageURL)}  // Pass the selected image URL\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Dialog;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,gCAAgC;AACvD,SAASC,MAAM,EAAEC,SAAS,QAAQ,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1E,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,GAAG,GAAGP,MAAM,CAAC,CAAC,CAAC,CAAE;EACvB,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA,MAAMa,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uDAAuDC,kBAAkB,CAACP,KAAK,CAAC,EAAE,CAAC;IAChH,MAAMQ,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAClCN,SAAS,CAACK,IAAI,CAACE,IAAI,CAAC;EACtB,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAIC,QAAQ,IAAK;IACrCb,GAAG,CAACc,KAAK,CAACD,QAAQ,CAAC,CAAC,CAAE;EACxB,CAAC;EAED,oBACEhB,OAAA;IAAAkB,QAAA,gBACElB,OAAA,CAACF,SAAS;MACRqB,KAAK,EAAEf,KAAM;MACbgB,QAAQ,EAAGC,CAAC,IAAKhB,QAAQ,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC1CI,WAAW,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACF3B,OAAA,CAACH,MAAM;MAAC+B,OAAO,EAAEpB,YAAa;MAAAU,QAAA,EAAC;IAAa;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAErD3B,OAAA;MAAAkB,QAAA,EACGZ,MAAM,CAACuB,GAAG,CAAEC,KAAK,iBAChB9B,OAAA;QAEE+B,GAAG,EAAED,KAAK,CAACE,UAAW;QACtBC,GAAG,EAAEH,KAAK,CAACI,IAAK;QAChBC,KAAK,EAAE;UAAEC,MAAM,EAAE,MAAM;UAAEC,MAAM,EAAE;QAAU,CAAE;QAC7CT,OAAO,EAAEA,CAAA,KAAMb,gBAAgB,CAACe,KAAK,CAACQ,aAAa,CAAE,CAAE;MAAA,GAJlDR,KAAK,CAACS,EAAE;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKd,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACzB,EAAA,CAvCID,MAAM;EAAA,QACEL,MAAM;AAAA;AAAA4C,EAAA,GADdvC,MAAM;AAyCZ,eAAeA,MAAM;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}