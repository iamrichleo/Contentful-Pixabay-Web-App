{"ast":null,"code":"var _jsxFileName = \"/Users/rleo/Documents/my-pixabay-app/src/locations/Field.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useSDK } from '@contentful/react-apps-toolkit';\nimport { Button } from '@contentful/f36-components';\n\n// TODO: You'll want to have a thumbnail to display the image once it's been selected\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Field = () => {\n  _s();\n  const sdk = useSDK(); // Access the Contentful SDK\n  const [imageUrl, setImageUrl] = useState(null);\n  useEffect(() => {\n    // Load the initial value from the field (if exists)\n    const initialValue = sdk.field.getValue();\n    if (initialValue) {\n      setImageUrl(initialValue);\n    }\n  }, [sdk]);\n\n  // Open dialog to select an image from Pixabay\n  const openPixabayDialog = async () => {\n    const selectedImageUrl = await sdk.dialogs.openCurrentApp({\n      title: 'Select an Image from Pixabay',\n      width: 'fullWidth',\n      minHeight: '80vh'\n    });\n\n    // After the dialog closes, we get the selected image URL\n    if (selectedImageUrl) {\n      setImageUrl(selectedImageUrl);\n      sdk.field.setValue(selectedImageUrl); // Store the selected image URL in the field\n    }\n  };\n\n  // Remove the image\n  const removeImage = () => {\n    setImageUrl(null);\n    sdk.field.removeValue(); // Clear the field value\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: imageUrl ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageUrl,\n        alt: \"Selected from Pixabay\",\n        style: {\n          maxWidth: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: removeImage,\n        children: \"Remove Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n      onClick: openPixabayDialog,\n      children: \"Select Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Field, \"+IuhXdy00xyvWc1fQrx58i1VsZY=\", false, function () {\n  return [useSDK];\n});\n_c = Field;\nexport default Field;\nvar _c;\n$RefreshReg$(_c, \"Field\");","map":{"version":3,"names":["React","useState","useEffect","useSDK","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","Field","_s","sdk","imageUrl","setImageUrl","initialValue","field","getValue","openPixabayDialog","selectedImageUrl","dialogs","openCurrentApp","title","width","minHeight","setValue","removeImage","removeValue","children","src","alt","style","maxWidth","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/rleo/Documents/my-pixabay-app/src/locations/Field.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSDK } from '@contentful/react-apps-toolkit';\nimport { Button } from '@contentful/f36-components';\n\n// TODO: You'll want to have a thumbnail to display the image once it's been selected\nconst Field = () => {\n  const sdk = useSDK();  // Access the Contentful SDK\n  const [imageUrl, setImageUrl] = useState(null);\n\n  useEffect(() => {\n    // Load the initial value from the field (if exists)\n    const initialValue = sdk.field.getValue();\n    if (initialValue) {\n      setImageUrl(initialValue);\n    }\n  }, [sdk]);\n\n  // Open dialog to select an image from Pixabay\n  const openPixabayDialog = async () => {\n    const selectedImageUrl = await sdk.dialogs.openCurrentApp({\n      title: 'Select an Image from Pixabay',\n      width: 'fullWidth',\n      minHeight: '80vh',\n    });\n\n    // After the dialog closes, we get the selected image URL\n    if (selectedImageUrl) {\n      setImageUrl(selectedImageUrl);\n      sdk.field.setValue(selectedImageUrl);  // Store the selected image URL in the field\n    }\n  };\n\n  // Remove the image\n  const removeImage = () => {\n    setImageUrl(null);\n    sdk.field.removeValue();  // Clear the field value\n  };\n\n  return (\n    <div>\n      {imageUrl ? (\n        <>\n          <img src={imageUrl} alt=\"Selected from Pixabay\" style={{ maxWidth: '100%' }} />\n          <Button onClick={removeImage}>Remove Image</Button>\n        </>\n      ) : (\n        <Button onClick={openPixabayDialog}>Select Image</Button>\n      )}\n    </div>\n  );\n};\n\nexport default Field;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,gCAAgC;AACvD,SAASC,MAAM,QAAQ,4BAA4B;;AAEnD;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,GAAG,GAAGR,MAAM,CAAC,CAAC,CAAC,CAAE;EACvB,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMY,YAAY,GAAGH,GAAG,CAACI,KAAK,CAACC,QAAQ,CAAC,CAAC;IACzC,IAAIF,YAAY,EAAE;MAChBD,WAAW,CAACC,YAAY,CAAC;IAC3B;EACF,CAAC,EAAE,CAACH,GAAG,CAAC,CAAC;;EAET;EACA,MAAMM,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,MAAMC,gBAAgB,GAAG,MAAMP,GAAG,CAACQ,OAAO,CAACC,cAAc,CAAC;MACxDC,KAAK,EAAE,8BAA8B;MACrCC,KAAK,EAAE,WAAW;MAClBC,SAAS,EAAE;IACb,CAAC,CAAC;;IAEF;IACA,IAAIL,gBAAgB,EAAE;MACpBL,WAAW,CAACK,gBAAgB,CAAC;MAC7BP,GAAG,CAACI,KAAK,CAACS,QAAQ,CAACN,gBAAgB,CAAC,CAAC,CAAE;IACzC;EACF,CAAC;;EAED;EACA,MAAMO,WAAW,GAAGA,CAAA,KAAM;IACxBZ,WAAW,CAAC,IAAI,CAAC;IACjBF,GAAG,CAACI,KAAK,CAACW,WAAW,CAAC,CAAC,CAAC,CAAE;EAC5B,CAAC;EAED,oBACEpB,OAAA;IAAAqB,QAAA,EACGf,QAAQ,gBACPN,OAAA,CAAAE,SAAA;MAAAmB,QAAA,gBACErB,OAAA;QAAKsB,GAAG,EAAEhB,QAAS;QAACiB,GAAG,EAAC,uBAAuB;QAACC,KAAK,EAAE;UAAEC,QAAQ,EAAE;QAAO;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/E7B,OAAA,CAACF,MAAM;QAACgC,OAAO,EAAEX,WAAY;QAAAE,QAAA,EAAC;MAAY;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACnD,CAAC,gBAEH7B,OAAA,CAACF,MAAM;MAACgC,OAAO,EAAEnB,iBAAkB;MAAAU,QAAA,EAAC;IAAY;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EACzD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACzB,EAAA,CA7CID,KAAK;EAAA,QACGN,MAAM;AAAA;AAAAkC,EAAA,GADd5B,KAAK;AA+CX,eAAeA,KAAK;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}