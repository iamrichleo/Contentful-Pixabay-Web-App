{"ast":null,"code":"var _jsxFileName = \"/Users/rleo/Documents/my-pixabay-app/src/locations/Dialog.jsx\",\n  _s = $RefreshSig$();\n/** @jsxImportSource @emotion/react */\nimport React, { useState } from 'react';\nimport { useSDK } from '@contentful/react-apps-toolkit';\nimport { Button, TextInput } from '@contentful/f36-components';\nimport styled from '@emotion/styled';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nconst Container = styled.div`\n  padding: 20px;\n  overflow-y: auto;\n`;\n_c = Container;\nconst ImageGrid = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  margin-top: 20px;\n`;\n_c2 = ImageGrid;\nconst Image = styled.img`\n  cursor: pointer;\n  width: 150px;\n  height: 150px;\n  object-fit: cover;\n`;\n_c3 = Image;\nconst Message = styled.p`\n  margin-top: 20px;\n  color: #666;\n`;\n_c4 = Message;\nconst ErrorMessage = styled.p`\n  margin-top: 20px;\n  color: red;\n  font-weight: bold;\n`;\n_c5 = ErrorMessage;\nconst PaginationControls = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 20px;\n`;\n_c6 = PaginationControls;\nconst PIXABAY_API_KEY = '45979271-945d910b95e96769c55111ae5';\nconst Dialog = () => {\n  _s();\n  const sdk = useSDK();\n  const [query, setQuery] = useState('');\n  const [images, setImages] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasSearched, setHasSearched] = useState(false);\n  const [page, setPage] = useState(1); // Track current page\n  const [totalHits, setTotalHits] = useState(0); // Total number of images that match the query\n  const imagesPerPage = 20; // Number of images to fetch per page (default 20 for Pixabay)\n\n  const searchImages = async (newPage = 1) => {\n    setIsLoading(true);\n    setError(null); // Reset error state before making a new request\n    setHasSearched(true); // Set to true after the first search\n\n    try {\n      const response = await fetch(`https://pixabay.com/api/?key=${PIXABAY_API_KEY}&q=${encodeURIComponent(query)}&page=${newPage}&per_page=${imagesPerPage}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch images');\n      }\n      const data = await response.json();\n      if (data.hits.length === 0) {\n        setImages([]); // No images found for the query\n      } else {\n        setImages(data.hits); // Set images for the current page\n        setTotalHits(data.totalHits); // Store the total number of hits for the query\n        setPage(newPage); // Update the current page number\n      }\n    } catch (err) {\n      setError('Something went wrong. Please try again.'); // Handle error\n    } finally {\n      setIsLoading(false); // Stop loading\n    }\n  };\n  const handleImageClick = imageUrl => {\n    sdk.close(imageUrl);\n  };\n  const nextPage = () => {\n    if (page * imagesPerPage < totalHits) {\n      searchImages(page + 1); // Fetch the next page of images\n    }\n  };\n  const prevPage = () => {\n    if (page > 1) {\n      searchImages(page - 1); // Fetch the previous page of images\n    }\n  };\n  return _jsxDEV(Container, {\n    children: [_jsxDEV(TextInput, {\n      value: query,\n      onChange: e => setQuery(e.target.value),\n      placeholder: \"Search for images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), _jsxDEV(Button, {\n      onClick: () => searchImages(1),\n      isDisabled: isLoading,\n      children: isLoading ? 'Searching...' : 'Search Images'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), error && _jsxDEV(ErrorMessage, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }, this), !error && images.length === 0 && hasSearched && !isLoading && _jsxDEV(Message, {\n      children: \"No images found for this query. Try a different search term.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this), _jsxDEV(ImageGrid, {\n      children: images.map(image => _jsxDEV(Image, {\n        src: image.previewURL,\n        alt: image.tags,\n        onClick: () => handleImageClick(image.largeImageURL)\n      }, image.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), hasSearched && totalHits > 0 && _jsxDEV(PaginationControls, {\n      children: [_jsxDEV(Button, {\n        onClick: prevPage,\n        isDisabled: page === 1 || isLoading,\n        children: \"Previous Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), _jsxDEV(Button, {\n        onClick: nextPage,\n        isDisabled: page * imagesPerPage >= totalHits || isLoading,\n        children: \"Next Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(Dialog, \"inXsrEGnEZl0Kt7lmNOIWJv3KJ4=\", false, function () {\n  return [useSDK];\n});\n_c7 = Dialog;\nexport default Dialog;\n\n// REFACTOR CODE, services - FinSweet\n// BONUS: support multiple images\n// NOTE: Do I need to support scrolling images, pagination? How many can display at a time?\n// Format the Dialog, Format the Image once selected. Adjust the copy in the app.\n// const PIXABAY_API_KEY = '45979271-945d910b95e96769c55111ae5';\n// const response = await fetch(`https://pixabay.com/api/?key=${PIXABAY_API_KEY}&q=${encodeURIComponent(query)}`);\n// const response = await fetch(`https://pixabay.com/api/?key=45979271-945d910b95e96769c55111ae5&q=falskdjasd`);\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"ImageGrid\");\n$RefreshReg$(_c3, \"Image\");\n$RefreshReg$(_c4, \"Message\");\n$RefreshReg$(_c5, \"ErrorMessage\");\n$RefreshReg$(_c6, \"PaginationControls\");\n$RefreshReg$(_c7, \"Dialog\");","map":{"version":3,"names":["React","useState","useSDK","Button","TextInput","styled","jsxDEV","_jsxDEV","Container","div","_c","ImageGrid","_c2","Image","img","_c3","Message","p","_c4","ErrorMessage","_c5","PaginationControls","_c6","PIXABAY_API_KEY","Dialog","_s","sdk","query","setQuery","images","setImages","error","setError","isLoading","setIsLoading","hasSearched","setHasSearched","page","setPage","totalHits","setTotalHits","imagesPerPage","searchImages","newPage","response","fetch","encodeURIComponent","ok","Error","data","json","hits","length","err","handleImageClick","imageUrl","close","nextPage","prevPage","children","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","isDisabled","map","image","src","previewURL","alt","tags","largeImageURL","id","_c7","$RefreshReg$"],"sources":["/Users/rleo/Documents/my-pixabay-app/src/locations/Dialog.jsx"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport React, { useState } from 'react';\nimport { useSDK } from '@contentful/react-apps-toolkit';\nimport { Button, TextInput } from '@contentful/f36-components';\nimport styled from '@emotion/styled';\n\nconst Container = styled.div`\n  padding: 20px;\n  overflow-y: auto;\n`;\n\nconst ImageGrid = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  margin-top: 20px;\n`;\n\nconst Image = styled.img`\n  cursor: pointer;\n  width: 150px;\n  height: 150px;\n  object-fit: cover;\n`;\n\nconst Message = styled.p`\n  margin-top: 20px;\n  color: #666;\n`;\n\nconst ErrorMessage = styled.p`\n  margin-top: 20px;\n  color: red;\n  font-weight: bold;\n`;\n\nconst PaginationControls = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 20px;\n`;\n\nconst PIXABAY_API_KEY = '45979271-945d910b95e96769c55111ae5';\n\nconst Dialog = () => {\n  const sdk = useSDK();\n  const [query, setQuery] = useState('');\n  const [images, setImages] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasSearched, setHasSearched] = useState(false);\n  const [page, setPage] = useState(1);  // Track current page\n  const [totalHits, setTotalHits] = useState(0); // Total number of images that match the query\n  const imagesPerPage = 20;  // Number of images to fetch per page (default 20 for Pixabay)\n\n  const searchImages = async (newPage = 1) => {\n    setIsLoading(true);\n    setError(null); // Reset error state before making a new request\n    setHasSearched(true);  // Set to true after the first search\n\n    try {\n      const response = await fetch(\n        `https://pixabay.com/api/?key=${PIXABAY_API_KEY}&q=${encodeURIComponent(query)}&page=${newPage}&per_page=${imagesPerPage}`\n      );\n      if (!response.ok) {\n        throw new Error('Failed to fetch images');\n      }\n      const data = await response.json();\n      if (data.hits.length === 0) {\n        setImages([]);  // No images found for the query\n      } else {\n        setImages(data.hits);  // Set images for the current page\n        setTotalHits(data.totalHits);  // Store the total number of hits for the query\n        setPage(newPage);  // Update the current page number\n      }\n    } catch (err) {\n      setError('Something went wrong. Please try again.'); // Handle error\n    } finally {\n      setIsLoading(false); // Stop loading\n    }\n  };\n\n  const handleImageClick = (imageUrl) => {\n    sdk.close(imageUrl);\n  };\n\n  const nextPage = () => {\n    if (page * imagesPerPage < totalHits) {\n      searchImages(page + 1);  // Fetch the next page of images\n    }\n  };\n\n  const prevPage = () => {\n    if (page > 1) {\n      searchImages(page - 1);  // Fetch the previous page of images\n    }\n  };\n\n  return (\n    <Container>\n      <TextInput\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n        placeholder=\"Search for images\"\n      />\n      <Button onClick={() => searchImages(1)} isDisabled={isLoading}>\n        {isLoading ? 'Searching...' : 'Search Images'}\n      </Button>\n\n      {error && <ErrorMessage>{error}</ErrorMessage>}\n\n      {!error && images.length === 0 && hasSearched && !isLoading && (\n        <Message>No images found for this query. Try a different search term.</Message>\n      )}\n\n      <ImageGrid>\n        {images.map((image) => (\n          <Image\n            key={image.id}\n            src={image.previewURL}\n            alt={image.tags}\n            onClick={() => handleImageClick(image.largeImageURL)}\n          />\n        ))}\n      </ImageGrid>\n\n      {/* Pagination Controls */}\n      {hasSearched && totalHits > 0 && (\n        <PaginationControls>\n          <Button onClick={prevPage} isDisabled={page === 1 || isLoading}>\n            Previous Page\n          </Button>\n          <Button\n            onClick={nextPage}\n            isDisabled={page * imagesPerPage >= totalHits || isLoading}\n          >\n            Next Page\n          </Button>\n        </PaginationControls>\n      )}\n    </Container>\n  );\n};\n\nexport default Dialog;\n\n\n\n\n\n// REFACTOR CODE, services - FinSweet\n// BONUS: support multiple images\n// NOTE: Do I need to support scrolling images, pagination? How many can display at a time?\n// Format the Dialog, Format the Image once selected. Adjust the copy in the app.\n// const PIXABAY_API_KEY = '45979271-945d910b95e96769c55111ae5';\n// const response = await fetch(`https://pixabay.com/api/?key=${PIXABAY_API_KEY}&q=${encodeURIComponent(query)}`);\n// const response = await fetch(`https://pixabay.com/api/?key=45979271-945d910b95e96769c55111ae5&q=falskdjasd`);\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}